// IS7. Replies of a message
/*
:param messageId: 206158432794

MATCH (m:Message {id: $messageId })<-[:REPLY_OF]-(c:Comment)-[:HAS_CREATOR]->(p:Person)
    OPTIONAL MATCH (m)-[:HAS_CREATOR]->(a:Person)-[r:KNOWS]-(p)
    RETURN c.id AS commentId,
        c.content AS commentContent,
        c.creationDate AS commentCreationDate,
        p.id AS replyAuthorId,
        p.firstName AS replyAuthorFirstName,
        p.lastName AS replyAuthorLastName,
        CASE r
            WHEN null THEN false
            ELSE true
        END AS replyAuthorKnowsOriginalMessageAuthor
    ORDER BY commentCreationDate DESC, replyAuthorId
*/


WITH Message, Person
 LET authorFriends = (
   FOR message IN Message
     FILTER message._key == @messageId
     FOR author IN 1..1 OUTBOUND message hasCreator
       FOR authorFriend IN 1..1 OUTBOUND author knows
   RETURN authorFriend
 )

 FOR message IN Message
   FILTER message._key == @messageId
   FOR reply IN 1..1 INBOUND message replyOf
     FOR replyAuthor IN 1..1 OUTBOUND reply hasCreator
 SORT reply.creationDate DESC, TO_NUMBER(replyAuthor._key) ASC
 RETURN {
   replyId: reply._key,
   replyContent: reply.content,
   replyCreationDate: reply.creationDate,
   replyAuthorId: replyAuthor._key,
   replyAuthorFirstName: replyAuthor.firstName,
   replyAuthorLastName: replyAuthor.lastName,
   replyAuthorIsFriend: replyAuthor._key IN authorFriends[*]._key
 }